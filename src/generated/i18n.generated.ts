/* DO NOT EDIT, file generated by nestjs-i18n */

import { Path } from "nestjs-i18n";
export type I18nTranslations = {
    "test": {
        "HELLO": string;
        "PRODUCT": {
            "NEW": string;
        };
        "ENGLISH": string;
        "ARRAY": [
            string,
            string,
            string
        ];
        "cat": string;
        "cat_name": string;
        "set-up-password": {
            "heading": string;
            "title": string;
            "followLink": string;
        };
        "day_interval": {
            "one": string;
            "other": string;
            "zero": string;
        };
        "nested": string;
    };
    "validation": {
        "ArrayContains": string;
        "ArrayMaxSize": string;
        "ArrayMinSize": string;
        "ArrayNotContains": string;
        "ArrayNotEmpty": string;
        "ArrayUnique": string;
        "Allow": string;
        "Equals": string;
        "IsDefined": string;
        "IsEmpty": string;
        "IsIn": string;
        "IsLatLong": string;
        "IsLatitude": string;
        "IsLongitude": string;
        "IsNotEmpty": string;
        "IsNotIn": string;
        "IsOptional": string;
        "NotEquals": string;
        "Validate": string;
        "ValidateBy": string;
        "ValidateIf": string;
        "ValidateNested": string;
        "ValidatePromise": string;
        "MaxDate": string;
        "MinDate": string;
        "IsDivisibleBy": string;
        "IsNegative": string;
        "IsPositive": string;
        "Max": string;
        "Min": string;
        "IsInstance": string;
        "IsNotEmptyObject": string;
        "Contains": string;
        "IsAlpha": string;
        "IsAlphanumeric": string;
        "IsAscii": string;
        "IsBIC": string;
        "IsBase32": string;
        "IsBase58": string;
        "IsBase64": string;
        "IsBooleanString": string;
        "IsBtcAddress": string;
        "IsByteLength": string;
        "IsCreditCard": string;
        "IsCurrency": string;
        "IsDataURI": string;
        "IsDateString": string;
        "IsDecimal": string;
        "IsEAN": string;
        "IsEmail": string;
        "IsEthereumAddress": string;
        "IsFQDN": string;
        "IsFirebasePushId": string;
        "IsFullWidth": string;
        "IsHSL": string;
        "IsHalfWidth": string;
        "IsHash": string;
        "IsHexColor": string;
        "IsHexadecimal": string;
        "IsIBAN": string;
        "IsIP": string;
        "IsISBN": string;
        "IsISIN": string;
        "IsISO31661Alpha2": string;
        "IsISO31661Alpha3": string;
        "IsISO8601": string;
        "IsISRC": string;
        "IsISSN": string;
        "IsIdentityCard": string;
        "IsJSON": string;
        "IsJWT": string;
        "IsLocale": string;
        "IsLowercase": string;
        "IsMacAddress": string;
        "IsMagnetURI": string;
        "IsMilitaryTime": string;
        "IsMimeType": string;
        "IsMobilePhone": string;
        "IsMongoId": string;
        "IsMultibyte": string;
        "IsNumberString": string;
        "IsOctal": string;
        "IsPassportNumber": string;
        "IsPhoneNumber": string;
        "IsPort": string;
        "IsPostalCode": string;
        "IsRFC3339": string;
        "IsRgbColor": string;
        "IsSemVer": string;
        "IsStrongPassword": string;
        "IsSurrogatePair": string;
        "IsTimeZone": string;
        "IsUUID": string;
        "IsUppercase": string;
        "IsUrl": string;
        "IsVariableWidth": string;
        "Length": string;
        "Matches": string;
        "MaxLength": string;
        "MinLength": string;
        "NotContains": string;
        "is-iso4217-currency-code": string;
        "is-tax-id": string;
        "IsArray": string;
        "IsBoolean": string;
        "IsDate": string;
        "IsEnum": string;
        "IsInt": string;
        "IsNumber": string;
        "IsObject": string;
        "IsString": string;
        "IsUnique": string;
        "Exist": string;
        "IsExist": string;
    };
};
export type I18nPath = Path<I18nTranslations>;
